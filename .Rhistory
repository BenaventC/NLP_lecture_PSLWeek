#ajouter les variables doc_var
corpus <- corpus(df$text) # docvars(corpus, field = "doc_id")
summary(corpus)
dfm<- corpus %>%
tokens() %>%
tokens_remove(stopwords("french"))%>%
dfm()
dfm<- dfm %>%
dfm_trim(min_termfreq = 20, verbose = FALSE)
set.seed(100)
textplot_wordcloud(dfm)
dfm_df<- as.data.frame(dfm)
dim(dfm_df)
head(dfm,5)
dfm_count<-dfm_df %>%
pivot_longer(-doc_id,names_to = "word", values_to = "n")%>%
group_by(word)%>%
mutate(m=1)%>%
summarise(Doc_frequency=sum(m),  #une erreur à vérifier
Term_frequency=sum(n))
#counting words
dfm_count<-dfm_df %>%
pivot_longer(-doc_id,names_to = "word", values_to = "n")%>%
group_by(word)%>%
summarise(Term_frequency=sum(n))
#library(ggwordcloud)
ggplot(foo, aes(label = word, size=Term_frequency, group = cluster)) +
geom_text_wordcloud() +
scale_size_area(max_size = 5) +
facet_wrap(vars(cluster), ncol=4)+
theme_minimal()
ggsave("./Images/cluster.jpeg", width = 28, height = 20, units = "cm")
# with library(FactoMineR)
foo<- dfm_df %>%
column_to_rownames(var="doc_id")
#PCA
res.pca <- PCA(foo[,c(1:2905)], ncp=5,graph=FALSE)
summary(res.pca)
#label selection factor
a=.2
foo1<-as.data.frame(res.pca$var$coord) %>%
rownames_to_column(var="label") %>%
filter(Dim.1>a | Dim.1< -a | Dim.2>a | Dim.2< - a)
ggplot(foo1, aes(x=Dim.1, y=Dim.2))+
geom_text(aes(label=label),size=2)
foo1<-as.data.frame(res.pca$var$coord) %>%
rownames_to_column(var="label") %>%
filter(Dim.3> a | Dim.3< -a | Dim.4> a | Dim.4< -a)
ggplot(foo1, aes(x=Dim.1, y=Dim.2))+
geom_text(aes(label=label),size=2)
#typo with kmnes
foo<-as.data.frame(res.pca$var$coord)
resKM <- kmeans(foo1, 20, nstart = 10, trace=0)
summary(res.pca)
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
#PCA
res.pca <- PCA(foo[,c(1:2905)], ncp=100,graph=FALSE) #could be ^retty long
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
# with library(FactoMineR)
foo<- dfm_df %>%
column_to_rownames(var="doc_id")
#PCA
res.pca <- PCA(foo[,c(1:2905)], ncp=100,graph=FALSE) #could be ^retty long
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
#label selection factor
a=.2
foo1<-as.data.frame(res.pca$var$coord) %>%
rownames_to_column(var="label") %>%
filter(Dim.1>a | Dim.1< -a | Dim.2>a | Dim.2< - a)
ggplot(foo1, aes(x=Dim.1, y=Dim.2))+
geom_text(aes(label=label),size=2)
foo1<-as.data.frame(res.pca$var$coord) %>%
rownames_to_column(var="label") %>%
filter(Dim.3> a | Dim.3< -a | Dim.4> a | Dim.4< -a)
ggplot(foo1, aes(x=Dim.1, y=Dim.2))+
geom_text(aes(label=label),size=2)
#typo with kmnes
foo<-as.data.frame(res.pca$var$coord)
resKM <- kmeans(foo1, 20, nstart = 10, trace=0)
resKM <- kmeans(foo1, 20, nstart = 20, trace=0)
# with library(FactoMineR)
foo<- dfm_df %>%
column_to_rownames(var="doc_id")
#PCA
res.pca <- PCA(foo[,c(1:2905)], ncp=10,graph=FALSE) #could be ^retty long
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 10))
#label selection factor
a=.2
foo1<-as.data.frame(res.pca$var$coord) %>%
rownames_to_column(var="label") %>%
filter(Dim.1>a | Dim.1< -a | Dim.2>a | Dim.2< - a)
ggplot(foo1, aes(x=Dim.1, y=Dim.2))+
geom_text(aes(label=label),size=2)
foo1<-as.data.frame(res.pca$var$coord) %>%
rownames_to_column(var="label") %>%
filter(Dim.3> a | Dim.3< -a | Dim.4> a | Dim.4< -a)
ggplot(foo1, aes(x=Dim.1, y=Dim.2))+
geom_text(aes(label=label),size=2)
#typo with kmnes
foo<-as.data.frame(res.pca$var$coord)
resKM <- kmeans(foo1, 20, nstart = 20, trace=0)
View(foo)
resKM <- kmeans(foo1, 20, nstart = 5, trace=0)
resKM <- kmeans(foo, 20, nstart = 5, trace=0)
resKM <- kmeans(foo, 20, nstart = 25 trace=0)
resKM <- kmeans(foo, 20, nstart = 25, trace=0)
foo<-as.data.frame(resKM$cluster) %>%
rename(cluster=1)%>%
rownames_to_column(var="word") %>%
left_join(dfm_count)
foo$cluster<-as.factor(foo$cluster)
#library(ggwordcloud)
ggplot(foo, aes(label = word, size=Term_frequency, group = cluster)) +
geom_text_wordcloud() +
scale_size_area(max_size = 5) +
facet_wrap(vars(cluster), ncol=4)+
theme_minimal()+ labs(title=NULL)
ggsave("./Images/cluster.jpeg", width = 28, height = 20, units = "cm")
#we need to transpose the matrix
foo<-dfm_df %>%
select(-doc_id)%>%
t()
word<-as.data.frame(rownames(foo))%>%
rename(word=1)
library(rfast)
#we need to transpose the matrix
foo<-dfm_df %>%
select(-doc_id)%>%
t()
word<-as.data.frame(rownames(foo))%>%
rename(word=1)
#library(Rfast) à retester
#dist<-foo %>%dist(method="canberra") #ts computing intensive.
saveRDS(dist, "./data/dist1.rds")
#library(Rtsne) # Load package
#readRDS(dist1.rds)
set.seed(42) # Sets seed for reproducibility
tsne_out <- Rtsne(dist,
initial_dims = 200,
perplexity = 25,
theta=.5,
num_threads=4,
verbose=1,
is_distance=TRUE)
tsne_out1<-as.data.frame(tsne_out$Y)
tsne_out2<-cbind(word,tsne_out1)%>%
left_join(dfm_count)%>%
filter(Term_frequency<5000 & Term_frequency>100)
ggplot(tsne_out2, aes(x=V1, y=V2))+
geom_text_repel(aes(label=word,
size=ifelse(Term_frequency>200,log10(Term_frequency),.1),alpha=log10(Term_frequency)),
color="black",max.overlap=100)+
theme(legend.position = "none")+
labs(x=NULL, y=NULL)+
scale_size(range = c(.1, 3))
ggsave("./Images/tsne.jpeg", width = 28, height = 20, units = "cm")
#library(Rtsne) # Load package
#readRDS(dist1.rds)
set.seed(42) # Sets seed for reproducibility
tsne_out <- Rtsne(dist,
initial_dims = 50,
perplexity = 25,
theta=.5,
num_threads=4,
verbose=1,
is_distance=TRUE)
tsne_out1<-as.data.frame(tsne_out$Y)
tsne_out2<-cbind(word,tsne_out1)%>%
left_join(dfm_count)%>%
filter(Term_frequency<5000 & Term_frequency>100)
ggplot(tsne_out2, aes(x=V1, y=V2))+
geom_text_repel(aes(label=word,
size=ifelse(Term_frequency>200,log10(Term_frequency),.1),alpha=log10(Term_frequency)),
color="black",max.overlap=100)+
theme(legend.position = "none")+
labs(x=NULL, y=NULL)+
scale_size(range = c(.1, 3))
ggsave("./Images/tsne.jpeg", width = 28, height = 20, units = "cm")
#library(Rtsne) # Load package
#readRDS(dist1.rds)
set.seed(42) # Sets seed for reproducibility
tsne_out <- Rtsne(dist,
initial_dims = 50,
perplexity = 25,
theta=.5,
num_threads=4,
verbose=1,
is_distance=TRUE)
tsne_out1<-as.data.frame(tsne_out$Y)
tsne_out2<-cbind(word,tsne_out1)%>%
left_join(dfm_count)%>%
filter(Term_frequency<5000 & Term_frequency>300)
ggplot(tsne_out2, aes(x=V1, y=V2))+
geom_text_repel(aes(label=word,
size=ifelse(Term_frequency>200,log10(Term_frequency),.1),alpha=log10(Term_frequency)),
color="black",max.overlap=100)+
theme(legend.position = "none")+
labs(x=NULL, y=NULL)+
scale_size(range = c(.1, 3))
ggsave("./Images/tsne.jpeg", width = 28, height = 20, units = "cm")
#library(Rtsne) # Load package
#readRDS(dist1.rds)
set.seed(42) # Sets seed for reproducibility
tsne_out <- Rtsne(dist,
initial_dims = 50,
perplexity = 25,
theta=.5,
num_threads=4,
verbose=1,
is_distance=TRUE)
tsne_out1<-as.data.frame(tsne_out$Y)
tsne_out2<-cbind(word,tsne_out1)%>%
left_join(dfm_count)%>%
filter(Term_frequency<5000 & Term_frequency>300)
ggplot(tsne_out2, aes(x=V1, y=V2))+
geom_text_repel(aes(label=word,
size=ifelse(Term_frequency>200,log10(Term_frequency),.1),alpha=Term_frequency),
color="black",max.overlap=100)+
theme(legend.position = "none")+
labs(x=NULL, y=NULL)+
scale_size(range = c(.1, 3))
ggsave("./Images/tsne.jpeg", width = 28, height = 20, units = "cm")
#library(Rtsne) # Load package
#readRDS(dist1.rds)
set.seed(42) # Sets seed for reproducibility
tsne_out <- Rtsne(dist,
initial_dims = 50,
perplexity = 25,
theta=.5,
num_threads=4,
verbose=1,
is_distance=TRUE)
tsne_out1<-as.data.frame(tsne_out$Y)
tsne_out2<-cbind(word,tsne_out1)%>%
left_join(dfm_count)%>%
filter(Term_frequency<5000 & Term_frequency>300)
ggplot(tsne_out2, aes(x=V1, y=V2))+
geom_text_repel(aes(label=word,
size=ifelse(Term_frequency>200,log10(Term_frequency),.1),
alpha=Term_frequency),
color="black",max.overlap=500)+
theme(legend.position = "none")+
labs(x=NULL, y=NULL)+
scale_size(range = c(.1, 2))
ggsave("./Images/tsne.jpeg", width = 28, height = 20, units = "cm")
View(word)
View(dfm_count)
#library(Rtsne) # Load package
#readRDS(dist1.rds)
set.seed(42) # Sets seed for reproducibility
tsne_out <- Rtsne(dist,
initial_dims = 50,
perplexity = 25,
theta=.5,
num_threads=4,
verbose=1,
is_distance=TRUE)
tsne_out1<-as.data.frame(tsne_out$Y)
tsne_out2<-cbind(word,tsne_out1)%>%
left_join(dfm_count)%>%
filter(Term_frequency<7000 & Term_frequency>300)
ggplot(tsne_out2, aes(x=V1, y=V2))+
geom_text_repel(aes(label=word,
size=ifelse(Term_frequency>200,log10(Term_frequency),.5),
alpha=Term_frequency),
color="black",max.overlap=500)+
theme(legend.position = "none")+
labs(x=NULL, y=NULL)+
scale_size(range = c(.1, 2))
ggsave("./Images/tsne.jpeg", width = 28, height = 20, units = "cm")
ggplot(tsne_out2, aes(x=V1, y=V2))+
geom_text_repel(aes(label=word,
size=ifelse(Term_frequency>300,log10(Term_frequency),.5),
alpha=log10(Term_frequency)),
color="black",max.overlap=100)+
theme(legend.position = "none")+
labs(x=NULL, y=NULL)+
scale_size(range = c(.1, 2))
ggplot(tsne_out2, aes(x=V1, y=V2))+
geom_text_repel(aes(label=word,
size=ifelse(Term_frequency>300,log10(Term_frequency),.5),
alpha=log10(Term_frequency)),
color="black",max.overlap=100)+
theme(legend.position = "none")+
labs(x=NULL, y=NULL)+
scale_size(range = c(.1, 2))
ggsave("./Images/tsne.jpeg", width = 28, height = 20, units = "cm")
ggplot(tsne_out2, aes(x=V1, y=V2))+
geom_text_repel(aes(label=word,
size=ifelse(Term_frequency>300,log10(Term_frequency),.5),
alpha=log10(Term_frequency)),
color="black",max.overlap=50)+
theme(legend.position = "none")+
labs(x=NULL, y=NULL)+
scale_size(range = c(.1, 2))
ggsave("./Images/tsne.jpeg", width = 28, height = 20, units = "cm")
ggplot(tsne_out2, aes(x=V1, y=V2))+
geom_text_repel(aes(label=word,
size=ifelse(Term_frequency>200,log10(Term_frequency),.5),
alpha=log10(Term_frequency)),
color="black",
max.overlap=30)+
theme(legend.position = "none")+
labs(x=NULL, y=NULL)+
scale_size(range = c(.1, 2))
ggsave("./Images/tsne.jpeg", width = 28, height = 20, units = "cm")
##coocurrence computing
tag_fcm <- fcm(dfm)
head(tag_fcm)
#select top tags
toptag <- names(topfeatures(dfm, 100))
topgat_fcm <- fcm_select(tag_fcm, pattern = toptag) #select 200 more frequent words
textplot_network(topgat_fcm,
min_freq = 0.10,
edge_alpha = 0.2,
edge_size = 1,
vertex_labelsize = 1)
textplot_network(topgat_fcm,
min_freq = 0.10,
edge_alpha = 0.8,
edge_size = 1,
vertex_labelsize = 3)
textplot_network(topgat_fcm,
min_freq = 0.10,
edge_alpha = 0.1,
edge_size = 0.1,
vertex_labelsize = 3)
##coocurrence computing
tag_fcm <- fcm(dfm)
head(tag_fcm)
#select top tags
toptag <- names(topfeatures(dfm, 300))
topgat_fcm <- fcm_select(tag_fcm, pattern = toptag) #select 200 more frequent words
textplot_network(topgat_fcm,
min_freq = 0.10,
edge_alpha = 0.01,
edge_size = 0.1,
vertex_labelsize = 2.5)
##coocurrence computing
tag_fcm <- fcm(dfm)
head(tag_fcm)
#select top tags
toptag <- names(topfeatures(dfm, 300))
topgat_fcm <- fcm_select(tag_fcm, pattern = toptag) #select 200 more frequent words
textplot_network(topgat_fcm,
min_freq = 0.10,
edge_alpha = 0.001,
edge_size = 0.1,
vertex_labelsize = 2.5)
##coocurrence computing
tag_fcm <- fcm(dfm)
head(tag_fcm)
#select top tags
toptag <- names(topfeatures(dfm, 300))
topgat_fcm <- fcm_select(tag_fcm, pattern = toptag) #select 200 more frequent words
textplot_network(topgat_fcm,
min_freq = 0.10,
edge_alpha = 0.005,
edge_size = 0.1,
vertex_labelsize = 2.5)
ggsave("./Images/network.jpeg", width = 28, height = 20, units = "cm")
foo<-UD %>%
filter(upos=="NOUN"|upos=="PROPN"|upos=="VERB"|upos=="ADJ")%>%
group_by(doc_id)%>%
count(doc_id, lemma, sort=TRUE)
total_words <- foo %>%
group_by(doc_id) %>%
summarize(total = sum(n))
Avis_words <- left_join(foo, total_words) %>%
mutate(Term_frequency=n/total)%>%
group_by(doc_id)%>%
summarise(word=lemma,rank = row_number(),
n=n,
Term_frequency=Term_frequency)
Avis_words
Avis_tf_idf <- Avis_words %>%
bind_tf_idf(word, doc_id, n)
Avis_tf_idf %>%
select(-rank,n,Term_frequency) %>%
filter(tf_idf<0.5)%>%
arrange(desc(tf_idf))
Avis_tf_idf%>%
filter(doc_id=="doc12441"|doc_id=="doc12912") %>%
group_by(doc_id) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = doc_id)) +
geom_col(show.legend = FALSE) +
facet_wrap(~doc_id, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
Avis_tf_idf%>%
ggplot(aes(tf_idf))+
geom_histogram(binwidth = 0.002)+
xlim(0,1)
foo<-Avis_tf_idf %>%
left_join(df_count)%>%
filter(Term_frequency>200)%>%
select(doc_id, word, tf_idf) %>%
pivot_wider(doc_id, names_from = "word", values_from = "tf_idf")%>%
column_to_rownames(var="doc_id")
foo<-Avis_tf_idf %>%
left_join(dfm_count)%>%
filter(Term_frequency>200)%>%
select(doc_id, word, tf_idf) %>%
pivot_wider(doc_id, names_from = "word", values_from = "tf_idf")%>%
column_to_rownames(var="doc_id")
library(Rfast)
dist2<-t(foo) %>%
Dist(method="canberra2")
saveRDS(dist2, "./data/dist2.rds")
foo<-Avis_tf_idf %>%
left_join(dfm_count)%>%
filter(Term_frequency>50)%>%
select(doc_id, word, tf_idf) %>%
pivot_wider(doc_id, names_from = "word", values_from = "tf_idf")%>%
column_to_rownames(var="doc_id")
foo<-Avis_tf_idf %>%
filter(n>50)%>%
select(doc_id, word, tf_idf) %>%
pivot_wider(doc_id, names_from = "word", values_from = "tf_idf")%>%
column_to_rownames(var="doc_id")
library(Rfast)
dist2<-t(foo) %>%
Dist(method="canberra2")
saveRDS(dist2, "./data/dist2.rds")
foo<-Avis_tf_idf %>%
filter(n>50)%>%
select(doc_id, word, tf_idf) %>%
pivot_wider(doc_id, names_from = "word", values_from = "tf_idf")%>%
column_to_rownames(var="doc_id")
#counting words
dfm_count<-dfm_df %>%
pivot_longer(-doc_id,names_to = "word", values_to = "n")%>%
group_by(word)%>%
summarise(Frequency=sum(n))
foo<-Avis_tf_idf %>%
left_join(dfm_count)%>%
filter(n>50)%>
foo<-Avis_tf_idf %>%
left_join(dfm_count)%>%
filter(n>50)%>%
select(doc_id, word, tf_idf) %>%
pivot_wider(doc_id, names_from = "word", values_from = "tf_idf")%>%
column_to_rownames(var="doc_id")
foo<-Avis_tf_idf %>%
left_join(dfm_count)%>%
filter(n>50)%>%
select(doc_id, word, tf_idf) %>%
pivot_wider(doc_id, names_from = "word", values_from = "tf_idf")%>%
column_to_rownames(var="doc_id")
foo<-Avis_tf_idf %>%
left_join(dfm_count)
foo<-Avis_tf_idf %>%
left_join(dfm_count) %>%
filter(Frequency>50)%>%
select(doc_id, word, tf_idf) %>%
pivot_wider(doc_id, names_from = "word", values_from = "tf_idf")%>%
column_to_rownames(var="doc_id")
library(Rfast)
dist2<-t(foo) %>%
Dist(method="canberra2")
saveRDS(dist2, "./data/dist2.rds")
set.seed(42) # Sets seed for reproducibility
tsne_out <- Rtsne(dist,
initial_dims = 10,
perplexity = 20,
theta=.5,
num_threads=4, verbose=1, is_distance=TRUE)
plot(tsne_out$Y,asp=1) # Plot the result
tsne_out1<-tsne_out$Y
tsne_out2<-as.data.frame(cbind(Word,tsne_out1) )%>%
left_join(dfm_count)%>%
filter(Term_frequency<7000 & Term_frequency>500)
tsne_out2<-as.data.frame(cbind(word,tsne_out1) )%>%
left_join(dfm_count)%>%
filter(Term_frequency<7000 & Term_frequency>500)
dist2<-readRDS("./data/dist2.rds")
set.seed(42) # Sets seed for reproducibility
tsne_out <- Rtsne(dist,
initial_dims = 10,
perplexity = 20,
theta=.5,
num_threads=4, verbose=1, is_distance=TRUE)
plot(tsne_out$Y,asp=1) # Plot the result
tsne_out1<-tsne_out$Y
tsne_out2<-as.data.frame(cbind(word,tsne_out1) )%>%
left_join(dfm_count)%>%
filter(Frequency<7000 & Frequency>500)
ggplot(tsne_out2, aes(x=`1`, y=`2` ))+
geom_text_repel(aes(label=Word, size=Term_frequency),color="blue4", alpha=.5,max.overlaps = 50)
ggplot(tsne_out2, aes(x=`1`, y=`2` ))+
geom_text_repel(aes(label=word, size=Term_frequency),color="blue4", alpha=.5,max.overlaps = 50)
ggplot(tsne_out2, aes(x=`1`, y=`2` ))+
geom_text_repel(aes(label=word, size=frequency),color="blue4", alpha=.5,max.overlaps = 50)
ggplot(tsne_out2, aes(x=`1`, y=`2` ))+
geom_text_repel(aes(label=word, size=Frequency),color="blue4", alpha=.5,max.overlaps = 50)
ggsave("tsne2.jpeg", width = 28, height = 20, units = "cm")
dist2<-readRDS("./data/dist2.rds")
set.seed(42) # Sets seed for reproducibility
tsne_out <- Rtsne(dist,
initial_dims = 10,
perplexity = 20,
theta=.5,
num_threads=4, verbose=1, is_distance=TRUE)
plot(tsne_out$Y,asp=1) # Plot the result
tsne_out1<-tsne_out$Y
tsne_out2<-as.data.frame(cbind(word,tsne_out1) )%>%
left_join(dfm_count)%>%
filter(Frequency<7000 & Frequency>200)
ggplot(tsne_out2, aes(x=`1`, y=`2` ))+
geom_text_repel(aes(label=word, size=log10(Frequency)),color="blue4", alpha=.5,max.overlaps = 50)
ggsave("tsne2.jpeg", width = 28, height = 20, units = "cm")
